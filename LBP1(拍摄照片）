# -*- coding: utf-8 -*-
#################################################################################################
#Author
#yangcheng shen
#2020/1/8
#################################################################################################


"""
import numpy as np
import cv2 as cv

# 人脸识别分类器
faceCascade = cv.CascadeClassifier("D:\\python27\\Lib\\site-packages\\cv2\\data\\haarcascade_frontalface_default.xml")
img = cv.imread("D:\\face\\3.jpg")
    # 转换成灰度图像
gray = cv.cvtColor(img, cv.COLOR_RGB2GRAY)

    # 人脸检测
faces = faceCascade.detectMultiScale(
        gray,
        scaleFactor=1.2,
        minNeighbors=5,     
        minSize=(32, 32)
    )
for (x, y, w, h) in faces:
    cv.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)
cv.imshow('video', img)
cv.waitKey(0)
cv.destroyAllWindows()
"""
"""
import cv2

import os
# 调用笔记本内置摄像头，所以参数为0，如果有其他的摄像头可以调整参数为1，2

cap = cv2.VideoCapture(0)

face_detector = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

face_id = input('\n enter user id:')

print('\n Initializing face capture. Look at the camera and wait ...')

count = 0

while True:

    # 从摄像头读取图片

    sucess, img = cap.read()
    print(img)
    # 转为灰度图片

    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # 检测人脸

    faces = face_detector.detectMultiScale(gray, 1.3, 5)

    for (x, y, w, h) in faces:
        cv2.rectangle(img, (x, y), (x+w, y+w), (255, 0, 0))
        count += 1

        # 保存图像
        cv2.imwrite("Facedata\\User." + str(face_id) + '.' + str(count) + '.jpg', gray[y: y + h, x: x + w])

        cv2.imshow('image', img)

    # 保持画面的持续。

    k = cv2.waitKey(1)

    if k == 27:   # 通过esc键退出摄像
        break

    elif count >= 1000:  # 得到1000个样本后退出摄像
        break

# 关闭摄像头
cap.release()

"""

import numpy as np
import cv2

cap = cv2.VideoCapture(0)
face_cascade = cv2.CascadeClassifier("D:\\python27\\Lib\\site-packages\\cv2\\data\\haarcascade_frontalface_default.xml")
sampleNum = 0
Id = input('请输入id：')

while True:
    ret, img = cap.read()
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
    for (x, y, w, h) in faces:
        img = cv2.rectangle(img, (x, y), (x + w, y + h), (255, 0, 0), 2)
        # 增加例子数
        sampleNum = sampleNum + 1

        # 把照片保存到数据集文件夹
        cv2.imwrite(
            "picData/user." + str(Id) + "." + str(sampleNum) + ".jpg",
            gray[y: y + h, x: x + w],
        )
    cv2.imshow("img", img)
    if cv2.waitKey(1) & 0xFF == ord("q"):
        break
    if sampleNum == 300:
        break

cap.release()
cv2.destroyAllWindows()
print("1")
